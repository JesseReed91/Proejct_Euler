/*
Program Written by Jesse Reed for Project Euler

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <cmath>
#include <iomanip>
#include <ctime>
#include <cstdlib>
#include <stdlib.h>

using namespace std;

void Fibb();

int main()
{
    int const MAX = 4000000;

    unsigned long int sumEven = 0; //accumulator

    int placeholder = 0;
    int oldNum = 1;
    int newNum = 0;

    while (newNum <= MAX)
    {
        newNum = placeholder + oldNum;
        placeholder = oldNum;
        oldNum = newNum;

        if (newNum % 2 == 0)
        {
            sumEven += newNum;
        }

    }

    
    
    cout << sumEven << endl;


}
